# Generated by Django 5.2.4 on 2025-07-18 18:58

import django.core.validators
import django.db.models.deletion
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0001_initial'),
        ('payments', '0005_alter_payment_status'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('card', 'Credit/Debit Card'), ('paypal', 'PayPal'), ('apple_pay', 'Apple Pay'), ('google_pay', 'Google Pay'), ('bank_transfer', 'Bank Transfer'), ('crypto', 'Cryptocurrency'), ('wallet', 'Digital Wallet')], max_length=20, verbose_name='Payment Type')),
                ('provider', models.CharField(max_length=50, verbose_name='Provider')),
                ('last_four', models.CharField(blank=True, max_length=4, verbose_name='Last Four Digits')),
                ('expiration_month', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('expiration_year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('cardholder_name', models.CharField(blank=True, max_length=100, verbose_name='Cardholder Name')),
                ('is_default', models.BooleanField(default=False, verbose_name='Default Method')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRefund',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Refund Amount')),
                ('currency', models.CharField(default='USD', max_length=3, verbose_name='Currency')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('canceled', 'Canceled')], default='pending', max_length=20, verbose_name='Status')),
                ('reason', models.CharField(choices=[('customer_request', 'Customer Request'), ('order_canceled', 'Order Canceled'), ('product_return', 'Product Return'), ('quality_issue', 'Quality Issue'), ('duplicate_payment', 'Duplicate Payment'), ('fraud', 'Fraudulent Transaction'), ('error', 'Processing Error'), ('other', 'Other')], default='customer_request', max_length=50, verbose_name='Reason')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('refund_id', models.CharField(blank=True, help_text='Refund ID from payment provider', max_length=255, verbose_name='Refund ID')),
                ('requested_at', models.DateTimeField(auto_now_add=True, verbose_name='Requested At')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Processed At')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Completed At')),
                ('provider_data', models.JSONField(default=dict, verbose_name='Provider Data')),
            ],
            options={
                'verbose_name': 'Payment Refund',
                'verbose_name_plural': 'Payment Refunds',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentWebhook',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('provider', models.CharField(choices=[('stripe', 'Stripe'), ('paypal', 'PayPal'), ('square', 'Square'), ('braintree', 'Braintree'), ('adyen', 'Adyen'), ('other', 'Other')], max_length=20, verbose_name='Provider')),
                ('event_type', models.CharField(max_length=100, verbose_name='Event Type')),
                ('event_id', models.CharField(max_length=255, unique=True, verbose_name='Event ID')),
                ('raw_payload', models.JSONField(verbose_name='Raw Payload')),
                ('headers', models.JSONField(default=dict, verbose_name='Headers')),
                ('signature', models.TextField(blank=True, verbose_name='Signature')),
                ('status', models.CharField(choices=[('received', 'Received'), ('processing', 'Processing'), ('processed', 'Processed'), ('failed', 'Failed'), ('ignored', 'Ignored')], default='received', max_length=20, verbose_name='Status')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Processed At')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
            ],
            options={
                'verbose_name': 'Payment Webhook',
                'verbose_name_plural': 'Payment Webhooks',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='payment',
            options={'ordering': ['-created_at'], 'verbose_name': 'Payment', 'verbose_name_plural': 'Payments'},
        ),
        migrations.AlterModelOptions(
            name='paymenttransaction',
            options={'ordering': ['-created_at'], 'verbose_name': 'Payment Transaction', 'verbose_name_plural': 'Payment Transactions'},
        ),
        migrations.AddField(
            model_name='payment',
            name='authorized_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Authorized At'),
        ),
        migrations.AddField(
            model_name='payment',
            name='captured_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Captured At'),
        ),
        migrations.AddField(
            model_name='payment',
            name='description',
            field=models.TextField(blank=True, verbose_name='Description'),
        ),
        migrations.AddField(
            model_name='payment',
            name='expires_at',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Expires At'),
        ),
        migrations.AddField(
            model_name='payment',
            name='failure_reason',
            field=models.TextField(blank=True, verbose_name='Failure Reason'),
        ),
        migrations.AddField(
            model_name='payment',
            name='fee_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Processing fees charged', max_digits=10, verbose_name='Fee Amount'),
        ),
        migrations.AddField(
            model_name='payment',
            name='net_amount',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Amount after fees', max_digits=12, null=True, verbose_name='Net Amount'),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_intent_id',
            field=models.CharField(blank=True, help_text='Payment intent ID from provider', max_length=255, null=True, verbose_name='Payment Intent ID'),
        ),
        migrations.AddField(
            model_name='payment',
            name='provider',
            field=models.CharField(blank=True, help_text='Stripe, PayPal, Square, etc.', max_length=50, verbose_name='Payment Provider'),
        ),
        migrations.AddField(
            model_name='payment',
            name='refundable_amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Refundable Amount'),
        ),
        migrations.AddField(
            model_name='payment',
            name='refunded_amount',
            field=models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Refunded Amount'),
        ),
        migrations.AddField(
            model_name='payment',
            name='type',
            field=models.CharField(choices=[('payment', 'Payment'), ('refund', 'Refund'), ('partial_refund', 'Partial Refund'), ('chargeback', 'Chargeback'), ('adjustment', 'Adjustment')], default='payment', max_length=20, verbose_name='Payment Type'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='Amount'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='currency',
            field=models.CharField(blank=True, max_length=3, verbose_name='Currency'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='ip_address',
            field=models.GenericIPAddressField(blank=True, null=True, verbose_name='IP Address'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='message',
            field=models.TextField(blank=True, verbose_name='Message'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='metadata',
            field=models.JSONField(default=dict, verbose_name='Metadata'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='provider',
            field=models.CharField(blank=True, max_length=50, verbose_name='Provider'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='status_code',
            field=models.CharField(blank=True, max_length=10, verbose_name='Status Code'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='transaction_id',
            field=models.CharField(blank=True, help_text='ID from payment provider', max_length=255, verbose_name='Transaction ID'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='transaction_type',
            field=models.CharField(choices=[('authorization', 'Authorization'), ('capture', 'Capture'), ('payment', 'Payment'), ('refund', 'Refund'), ('void', 'Void'), ('chargeback', 'Chargeback'), ('dispute', 'Dispute'), ('webhook', 'Webhook'), ('payment_failed', 'Payment Failed'), ('payment_canceled', 'Payment Canceled')], default='authorization', max_length=20, verbose_name='Transaction Type'),
        ),
        migrations.AddField(
            model_name='paymenttransaction',
            name='user_agent',
            field=models.TextField(blank=True, verbose_name='User Agent'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='amount',
            field=models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Amount'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='currency',
            field=models.CharField(default='USD', help_text='ISO 4217 currency code', max_length=3, verbose_name='Currency'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='payment',
            name='status',
            field=models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded'), ('disputed', 'Disputed'), ('expired', 'Expired')], default='pending', max_length=20, verbose_name='Status'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='transaction_id',
            field=models.CharField(blank=True, help_text='ID from payment provider', max_length=255, null=True, verbose_name='Transaction ID'),
        ),
        migrations.AlterField(
            model_name='payment',
            name='updated_at',
            field=models.DateTimeField(auto_now=True, verbose_name='Updated At'),
        ),
        migrations.AlterField(
            model_name='paymenttransaction',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, verbose_name='Created At'),
        ),
        migrations.AlterField(
            model_name='paymenttransaction',
            name='id',
            field=models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False),
        ),
        migrations.AlterField(
            model_name='paymenttransaction',
            name='raw_response',
            field=models.JSONField(default=dict, help_text='Complete response from payment provider', verbose_name='Raw Response'),
        ),
        migrations.AlterField(
            model_name='paymenttransaction',
            name='success',
            field=models.BooleanField(default=False, verbose_name='Success'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['payment', 'transaction_type'], name='payments_pa_payment_acaa94_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['transaction_id'], name='payments_pa_transac_c1fd68_idx'),
        ),
        migrations.AddIndex(
            model_name='paymenttransaction',
            index=models.Index(fields=['success', 'created_at'], name='payments_pa_success_9b4dae_idx'),
        ),
        migrations.AddField(
            model_name='paymentmethod',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payment',
            name='payment_method',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='payments.paymentmethod'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', 'created_at'], name='payments_pa_status_343680_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['transaction_id'], name='payments_pa_transac_8e9d99_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_intent_id'], name='payments_pa_payment_7ccbf1_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['order'], name='payments_pa_order_i_1d1c93_idx'),
        ),
        migrations.AddField(
            model_name='paymentrefund',
            name='payment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.payment'),
        ),
        migrations.AddField(
            model_name='paymentrefund',
            name='processed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_refunds', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='paymentwebhook',
            name='payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='webhooks', to='payments.payment'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['provider', 'event_type'], name='payments_pa_provide_cbd3d4_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['event_id'], name='payments_pa_event_i_27bff6_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentwebhook',
            index=models.Index(fields=['status', 'created_at'], name='payments_pa_status_f210fa_idx'),
        ),
    ]
